version: "3.8"

services:
    laravel.test:
        build:
            context: ./vendor/laravel/sail/runtimes/8.2
            dockerfile: Dockerfile
            args:
                WWWGROUP: "${WWWGROUP}"
        image: sail-8.2/app
        extra_hosts:
            - "host.docker.internal:host-gateway"
        ports:
            - "${APP_PORT:-80}:80"
            - "${VITE_PORT:-5173}:${VITE_PORT:-5173}"
        environment:
            WWWUSER: "${WWWUSER}"
            LARAVEL_SAIL: 1
            XDEBUG_MODE: "${SAIL_XDEBUG_MODE:-off}"
            XDEBUG_CONFIG: "${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}"
            IGNITION_LOCAL_SITES_PATH: "${PWD}"
        volumes:
            - ".:/var/www/html"
        networks:
            - sail

    mysql:
        image: "mysql/mysql-server:8.0"
        ports:
            - "${FORWARD_DB_PORT:-3306}:3306"
        environment:
            MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
            MYSQL_ROOT_HOST: "%"
            MYSQL_DATABASE: "${DB_DATABASE}"
            MYSQL_USER: "${DB_USERNAME}"
            MYSQL_PASSWORD: "${DB_PASSWORD}"
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - "sail-mysql:/var/lib/mysql"
            - "./vendor/laravel/sail/database/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh"
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - mysqladmin
                - ping
                - "-p${DB_PASSWORD}"
            retries: 3
            timeout: 5s

    mysql_test:
        image: "mysql/mysql-server:8.0"
        ports:
            - "3307:3306"
        environment:
            MYSQL_DATABASE: "test_warehouse_crm"
            MYSQL_USER: "test_sail"
            MYSQL_PASSWORD: "test_password"
        volumes:
            - "sail-mysql-test:/var/lib/mysql"
            - "./vendor/laravel/sail/database/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh"
        networks:
            - sail
        healthcheck:
            test:
                - CMD
                - mysqladmin
                - ping
                - "test_password"
            retries: 3
            timeout: 5s

    redis:
        image: redis:alpine
        ports:
            - "6379:6379"
        environment:
            REDIS_PASSWORD: "${REDIS_PASSWORD}" # Optional password
        volumes:
            - "redis-data:/data"
        networks:
            - sail
        command: redis-server --requirepass '${REDIS_PASSWORD}' # Enable password protection

    rabbitmq:
        image: rabbitmq:3-management
        ports:
            - "5672:5672"
            - "15672:15672"
        environment:
            RABBITMQ_DEFAULT_USER: "${RABBITMQ_USER}" # Default RabbitMQ user
            RABBITMQ_DEFAULT_PASS: "${RABBITMQ_PASSWORD}" # Default RabbitMQ password
        volumes:
            - "rabbitmq-data:/var/lib/rabbitmq"
        networks:
            - sail

    mailhog:
        image: "mailhog/mailhog"
        ports:
            - "1025:1025" # SMTP port
            - "8025:8025" # Web UI port
        environment:
            MH_SMTP_BIND_ADDR: "0.0.0.0:1025" # Bind address for SMTP server
            MH_SMTP_AUTH: "false" # Disable authentication for SMTP
            MH_API_BIND_ADDR: "0.0.0.0:8025" # Bind address for API and Web UI
            MH_WEB_UI: "true" # Enable the web UI
        networks:
            - sail
        volumes:
            - "mailhog-data:/data"

networks:
    sail:
        driver: bridge

volumes:
    sail-mysql:
        driver: local
    sail-mysql-test:
        driver: local
    sail-redis:
        driver: local
    sail-kafka:
        driver: local
    sail-rabbitmq:
        driver: local
    sail-mongodb:
        driver: local
    redis-data:
        driver: local
    rabbitmq-data:
        driver: local
    mongodb-data:
        driver: local
    mailhog-data:
        # Corrected volume name
        driver: local
